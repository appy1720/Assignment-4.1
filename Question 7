
public class Question6 
{	
     public  int Question6(int x,int y)
	{
           return(x+y);
        }

     public int Question6(int x,int y,int z)
        {
           return(x+y+z);
        }
	public static void main(String[] args) 
           {
                 Question6 obj = new Question6();
                 System.out.println(obj.Question6(1,2));
                 System.out.println(obj.Question6(1,2,3));


           }
}


Yes , method overloading can be done with same return type. In this case, either the data type of parameters or number of parameters or both should be different. The above code is an example where method overloading has been demonstrated with same return type[method 1 and method 2]

However, what is not possible is to invoke method overloading just my changing the return type alone as the compiler wonâ€™t understand which method to call due to ambiguity.
